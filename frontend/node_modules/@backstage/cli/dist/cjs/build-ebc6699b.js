'use strict';

require('commander');
require('chalk');
var index = require('./index-dff1c82a.js');
require('fs-extra');
require('@backstage/cli-common');
var configLoader = require('@backstage/config-loader');
var config = require('@backstage/config');
require('webpack');
require('path');
require('fork-ts-checker-webpack-plugin');
require('html-webpack-plugin');
require('react-dev-utils/ModuleScopePlugin');
require('start-server-webpack-plugin');
require('webpack-node-externals');
require('./paths-45bf3d12.js');
require('mini-css-extract-plugin');
require('./svgrTemplate-2930b0e1.js');
require('child_process');
require('util');
require('./run-a8d49408.js');
require('yn');
require('react-dev-utils/FileSizeReporter');
require('react-dev-utils/formatWebpackMessages');
var bundle = require('./bundle-3a60ee04.js');
require('webpack-dev-server');
require('react-dev-utils/openBrowser');

var build = async (cmd) => {
  var _a, _b;
  const appConfigs = await configLoader.loadConfig({
    env: (_b = (_a = process.env.APP_ENV) != null ? _a : process.env.NODE_ENV) != null ? _b : "production",
    rootPaths: [index.paths.targetRoot, index.paths.targetDir]
  });
  await bundle.buildBundle({
    entry: "src/index",
    statsJsonEnabled: cmd.stats,
    config: config.ConfigReader.fromConfigs(appConfigs),
    appConfigs
  });
};

exports.default = build;
//# sourceMappingURL=build-ebc6699b.js.map
