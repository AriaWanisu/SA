{"version":3,"file":"index.cjs.js","sources":["../src/lib/resolver.ts","../src/lib/utils.ts","../src/lib/reader.ts","../src/lib/env.ts","../src/lib/secrets.ts","../src/loader.ts"],"sourcesContent":["/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { resolve as resolvePath } from 'path';\nimport { pathExists } from 'fs-extra';\n\ntype ResolveOptions = {\n  // Root paths to search for config files. Config from earlier paths has lower priority.\n  rootPaths: string[];\n  // The environment that we're loading config for, e.g. 'development', 'production'.\n  env: string;\n};\n\n/**\n * Resolves all configuration files that should be loaded in the given environment.\n *\n * For each root directory, search for the default app-config.yaml, along with suffixed\n * APP_ENV and local variants, e.g. app-config.production.yaml or app-config.development.local.yaml\n *\n * The priority order of config loaded through suffixes is `env > local > none`, meaning that\n * for example app-config.development.yaml has higher priority than `app-config.local.yaml`.\n *\n */\nexport async function resolveStaticConfig(\n  options: ResolveOptions,\n): Promise<string[]> {\n  const filePaths = [\n    `app-config.yaml`,\n    `app-config.local.yaml`,\n    `app-config.${options.env}.yaml`,\n    `app-config.${options.env}.local.yaml`,\n  ];\n\n  const resolvedPaths = [];\n\n  for (const rootPath of options.rootPaths) {\n    for (const filePath of filePaths) {\n      const path = resolvePath(rootPath, filePath);\n      if (await pathExists(path)) {\n        resolvedPaths.push(path);\n      }\n    }\n  }\n\n  return resolvedPaths;\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonValue, JsonObject } from '@backstage/config';\n\nexport function isObject(obj: JsonValue | undefined): obj is JsonObject {\n  if (typeof obj !== 'object') {\n    return false;\n  } else if (Array.isArray(obj)) {\n    return false;\n  }\n  return obj !== null;\n}\n\n// A thing to make sure we've narrowed the type down to never\nexport function isNever<T extends never>() {\n  return void 0 as T;\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig, JsonObject, JsonValue } from '@backstage/config';\nimport { basename } from 'path';\nimport yaml from 'yaml';\nimport { ReaderContext } from './types';\nimport { isObject } from './utils';\n\n/**\n * Reads and parses, and validates, and transforms a single config file.\n * The transformation rewrites any special values, like the $secret key.\n */\nexport async function readConfigFile(\n  filePath: string,\n  ctx: ReaderContext,\n): Promise<AppConfig> {\n  const configYaml = await ctx.readFile(filePath);\n  const config = yaml.parse(configYaml);\n\n  const context = basename(filePath);\n\n  async function transform(\n    obj: JsonValue,\n    path: string,\n  ): Promise<JsonValue | undefined> {\n    if (ctx.skip(path)) {\n      return undefined;\n    }\n\n    if (typeof obj !== 'object') {\n      return obj;\n    } else if (obj === null) {\n      return undefined;\n    } else if (Array.isArray(obj)) {\n      const arr = new Array<JsonValue>();\n\n      for (const [index, value] of obj.entries()) {\n        const out = await transform(value, `${path}[${index}]`);\n        if (out !== undefined) {\n          arr.push(out);\n        }\n      }\n\n      return arr;\n    }\n\n    // TODO(Rugvip): This form of declaring secrets is deprecated, warn and remove in the future\n    if ('$secret' in obj) {\n      console.warn(\n        `Deprecated secret declaration at '${path}' in '${context}', use $env, $file, etc. instead`,\n      );\n      if (!isObject(obj.$secret)) {\n        throw TypeError(`Expected object at secret ${path}.$secret`);\n      }\n\n      try {\n        return await ctx.readSecret(path, obj.$secret);\n      } catch (error) {\n        throw new Error(`Invalid secret at ${path}: ${error.message}`);\n      }\n    }\n\n    // Check if there's any key that starts with a '$', in that case we treat\n    // this entire object as a secret.\n    const [secretKey] = Object.keys(obj).filter(key => key.startsWith('$'));\n    if (secretKey) {\n      if (Object.keys(obj).length !== 1) {\n        throw new Error(\n          `Secret key '${secretKey}' has adjacent keys at ${path}`,\n        );\n      }\n      try {\n        return await ctx.readSecret(path, {\n          [secretKey.slice(1)]: obj[secretKey],\n        });\n      } catch (error) {\n        throw new Error(`Invalid secret at ${path}: ${error.message}`);\n      }\n    }\n\n    const out: JsonObject = {};\n\n    for (const [key, value] of Object.entries(obj)) {\n      // undefined covers optional fields\n      if (value !== undefined) {\n        const result = await transform(value, `${path}.${key}`);\n        if (result !== undefined) {\n          out[key] = result;\n        }\n      }\n    }\n\n    return out;\n  }\n\n  const finalConfig = await transform(config, '');\n  if (!isObject(finalConfig)) {\n    throw new TypeError('Expected object at config root');\n  }\n  return { data: finalConfig, context };\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig, JsonObject } from '@backstage/config';\n\nconst ENV_PREFIX = 'APP_CONFIG_';\n\n// Update the same pattern in config package if this is changed\nconst CONFIG_KEY_PART_PATTERN = /^[a-z][a-z0-9]*(?:[-_][a-z][a-z0-9]*)*$/i;\n\n/**\n * Read runtime configuration from the environment.\n *\n * Only environment variables prefixed with APP_CONFIG_ will be considered.\n *\n * For each variable, the prefix will be removed, and rest of the key will\n * be split by '_'. Each part will then be used as keys to build up a nested\n * config object structure. The treatment of the entire environment variable\n * is case-sensitive.\n *\n * The value of the variable should be JSON serialized, as it will be parsed\n * and the type will be kept intact. For example \"true\" and true are treated\n * differently, as well as \"42\" and 42.\n *\n * For example, to set the config app.title to \"My Title\", use the following:\n *\n * APP_CONFIG_app_title='\"My Title\"'\n */\nexport function readEnvConfig(env: {\n  [name: string]: string | undefined;\n}): AppConfig[] {\n  let data: JsonObject | undefined = undefined;\n\n  for (const [name, value] of Object.entries(env)) {\n    if (!value) {\n      continue;\n    }\n    if (name.startsWith(ENV_PREFIX)) {\n      const key = name.replace(ENV_PREFIX, '');\n      const keyParts = key.split('_');\n\n      let obj = (data = data ?? {});\n      for (const [index, part] of keyParts.entries()) {\n        if (!CONFIG_KEY_PART_PATTERN.test(part)) {\n          throw new TypeError(`Invalid env config key '${key}'`);\n        }\n        if (index < keyParts.length - 1) {\n          obj = (obj[part] = obj[part] ?? {}) as JsonObject;\n          if (typeof obj !== 'object' || Array.isArray(obj)) {\n            const subKey = keyParts.slice(0, index + 1).join('_');\n            throw new TypeError(\n              `Could not nest config for key '${key}' under existing value '${subKey}'`,\n            );\n          }\n        } else {\n          if (part in obj) {\n            throw new TypeError(\n              `Refusing to override existing config at key '${key}'`,\n            );\n          }\n          try {\n            const [, parsedValue] = safeJsonParse(value);\n            if (parsedValue === null) {\n              throw new Error('value may not be null');\n            }\n            obj[part] = parsedValue;\n          } catch (error) {\n            throw new TypeError(\n              `Failed to parse JSON-serialized config value for key '${key}', ${error}`,\n            );\n          }\n        }\n      }\n    }\n  }\n\n  return data ? [{ data, context: 'env' }] : [];\n}\n\nfunction safeJsonParse(str: string): [Error | null, any] {\n  try {\n    return [null, JSON.parse(str)];\n  } catch (err) {\n    return [err, str];\n  }\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as yup from 'yup';\nimport yaml from 'yaml';\nimport { extname } from 'path';\nimport { JsonObject, JsonValue } from '@backstage/config';\nimport { isObject, isNever } from './utils';\nimport { ReaderContext } from './types';\n\n// Reads a file and forwards the contents as is, assuming ut8 encoding\ntype FileSecret = {\n  // Path to the secret file, relative to the config file.\n  file: string;\n};\n\n// Reads the secret from an environment variable.\ntype EnvSecret = {\n  // The name of the environment file.\n  env: string;\n};\n\n// Reads a secret from a json-like file and extracts a value at a path.\n// The supported extensions are define in dataSecretParser below.\ntype DataSecret = {\n  // Path to the data secret file, relative to the config file.\n  data: string;\n  // The path to the value inside the data file, each element separated by '.'.\n  path?: string;\n};\n\ntype Secret = FileSecret | EnvSecret | DataSecret;\n\n// Schema for each type of secret description\nconst secretLoaderSchemas = {\n  file: yup.object({\n    file: yup.string().required(),\n  }),\n  env: yup.object({\n    env: yup.string().required(),\n  }),\n  data: yup.object({\n    data: yup.string().required(),\n  }),\n};\n\n// The top-level secret schema, which figures out what type of secret it is.\nconst secretSchema = yup.lazy<object>(value => {\n  if (typeof value !== 'object' || value === null) {\n    return yup.object().required().label('secret');\n  }\n\n  const loaderTypes = Object.keys(\n    secretLoaderSchemas,\n  ) as (keyof typeof secretLoaderSchemas)[];\n\n  for (const key of loaderTypes) {\n    if (key in value) {\n      return secretLoaderSchemas[key];\n    }\n  }\n  throw new yup.ValidationError(\n    `Secret must contain one of '${loaderTypes.join(\"', '\")}'`,\n    value,\n    '$secret',\n  );\n});\n\n// Parsers for each type of data secret file.\nconst dataSecretParser: {\n  [ext in string]: (content: string) => Promise<JsonObject>;\n} = {\n  '.json': async content => JSON.parse(content),\n  '.yaml': async content => yaml.parse(content),\n  '.yml': async content => yaml.parse(content),\n};\n\n/**\n * Transforms a secret description into the actual secret value.\n */\nexport async function readSecret(\n  data: JsonObject,\n  ctx: ReaderContext,\n): Promise<string | undefined> {\n  const secret = secretSchema.validateSync(data, { strict: true }) as Secret;\n\n  if ('file' in secret) {\n    return ctx.readFile(secret.file);\n  }\n  if ('env' in secret) {\n    return ctx.env[secret.env];\n  }\n  if ('data' in secret) {\n    const url =\n      'path' in secret ? `${secret.data}#${secret.path}` : secret.data;\n    const [filePath, dataPath] = url.split(/#(.*)/);\n    if (!dataPath) {\n      throw new Error(\n        `Invalid format for data secret value, must be of the form <filepath>#<datapath>, got '${url}'`,\n      );\n    }\n\n    const ext = extname(filePath);\n    const parser = dataSecretParser[ext];\n    if (!parser) {\n      throw new Error(`No data secret parser available for extension ${ext}`);\n    }\n\n    const content = await ctx.readFile(filePath);\n\n    const parts = dataPath.split('.');\n\n    let value: JsonValue | undefined = await parser(content);\n    for (const [index, part] of parts.entries()) {\n      if (!isObject(value)) {\n        const errPath = parts.slice(0, index).join('.');\n        throw new Error(`Value is not an object at ${errPath} in ${filePath}`);\n      }\n      value = value[part];\n    }\n\n    return String(value);\n  }\n\n  isNever<typeof secret>();\n  throw new Error('Secret was left unhandled');\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport { resolve as resolvePath, dirname } from 'path';\nimport { AppConfig, JsonObject } from '@backstage/config';\nimport {\n  resolveStaticConfig,\n  readConfigFile,\n  readEnvConfig,\n  readSecret,\n} from './lib';\n\nexport type LoadConfigOptions = {\n  // Root paths to search for config files. Config from earlier paths has lower priority.\n  rootPaths: string[];\n\n  // The environment that we're loading config for, e.g. 'development', 'production'.\n  env: string;\n\n  // Whether to read secrets or omit them, defaults to false.\n  shouldReadSecrets?: boolean;\n};\n\nclass Context {\n  constructor(\n    private readonly options: {\n      secretPaths: Set<string>;\n      env: { [name in string]?: string };\n      rootPath: string;\n      shouldReadSecrets: boolean;\n    },\n  ) {}\n\n  get env() {\n    return this.options.env;\n  }\n\n  skip(path: string): boolean {\n    if (this.options.shouldReadSecrets) {\n      return false;\n    }\n    return this.options.secretPaths.has(path);\n  }\n\n  async readFile(path: string): Promise<string> {\n    return fs.readFile(resolvePath(this.options.rootPath, path), 'utf8');\n  }\n\n  async readSecret(\n    path: string,\n    desc: JsonObject,\n  ): Promise<string | undefined> {\n    this.options.secretPaths.add(path);\n    if (!this.options.shouldReadSecrets) {\n      return undefined;\n    }\n\n    return readSecret(desc, this);\n  }\n}\n\nexport async function loadConfig(\n  options: LoadConfigOptions,\n): Promise<AppConfig[]> {\n  const configs = [];\n\n  const configPaths = await resolveStaticConfig(options);\n\n  try {\n    const secretPaths = new Set<string>();\n\n    for (const configPath of configPaths) {\n      const config = await readConfigFile(\n        configPath,\n        new Context({\n          secretPaths,\n          env: process.env,\n          rootPath: dirname(configPath),\n          shouldReadSecrets: Boolean(options.shouldReadSecrets),\n        }),\n      );\n\n      configs.push(config);\n    }\n  } catch (error) {\n    throw new Error(\n      `Failed to read static configuration file: ${error.message}`,\n    );\n  }\n\n  configs.push(...readEnvConfig(process.env));\n\n  return configs;\n}\n"],"names":["resolvePath","pathExists","basename","yup.object","yup.string","yup.lazy","yup.ValidationError","extname","fs","dirname"],"mappings":"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"}