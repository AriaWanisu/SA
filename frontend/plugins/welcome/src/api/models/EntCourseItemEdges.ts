/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Project API Course Item
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntCourse,
    EntCourseFromJSON,
    EntCourseFromJSONTyped,
    EntCourseToJSON,
    EntSubject,
    EntSubjectFromJSON,
    EntSubjectFromJSONTyped,
    EntSubjectToJSON,
    EntSubjectType,
    EntSubjectTypeFromJSON,
    EntSubjectTypeFromJSONTyped,
    EntSubjectTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntCourseItemEdges
 */
export interface EntCourseItemEdges {
    /**
     * 
     * @type {EntCourse}
     * @memberof EntCourseItemEdges
     */
    courses?: EntCourse;
    /**
     * 
     * @type {EntSubject}
     * @memberof EntCourseItemEdges
     */
    subjects?: EntSubject;
    /**
     * 
     * @type {EntSubjectType}
     * @memberof EntCourseItemEdges
     */
    types?: EntSubjectType;
}

export function EntCourseItemEdgesFromJSON(json: any): EntCourseItemEdges {
    return EntCourseItemEdgesFromJSONTyped(json, false);
}

export function EntCourseItemEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntCourseItemEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'courses': !exists(json, 'Courses') ? undefined : EntCourseFromJSON(json['Courses']),
        'subjects': !exists(json, 'Subjects') ? undefined : EntSubjectFromJSON(json['Subjects']),
        'types': !exists(json, 'Types') ? undefined : EntSubjectTypeFromJSON(json['Types']),
    };
}

export function EntCourseItemEdgesToJSON(value?: EntCourseItemEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return { 
        'Course': EntCourseToJSON(value.courses),
        'Subject': EntSubjectToJSON(value.subjects),
        'SubjectType': EntSubjectTypeToJSON(value.types),
    };
}


