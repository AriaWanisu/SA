// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// CoursesColumns holds the columns for the "courses" table.
	CoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "course_name", Type: field.TypeString, Unique: true},
		{Name: "owner_id", Type: field.TypeInt, Nullable: true},
	}
	// CoursesTable holds the schema information for the "courses" table.
	CoursesTable = &schema.Table{
		Name:       "courses",
		Columns:    CoursesColumns,
		PrimaryKey: []*schema.Column{CoursesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "courses_teachers_courses",
				Columns: []*schema.Column{CoursesColumns[2]},

				RefColumns: []*schema.Column{TeachersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CourseItemsColumns holds the columns for the "course_items" table.
	CourseItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "course_id", Type: field.TypeInt, Nullable: true},
		{Name: "subject_id", Type: field.TypeInt, Nullable: true},
		{Name: "type_id", Type: field.TypeInt, Nullable: true},
	}
	// CourseItemsTable holds the schema information for the "course_items" table.
	CourseItemsTable = &schema.Table{
		Name:       "course_items",
		Columns:    CourseItemsColumns,
		PrimaryKey: []*schema.Column{CourseItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "course_items_courses_course_items",
				Columns: []*schema.Column{CourseItemsColumns[1]},

				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "course_items_subjects_course_items",
				Columns: []*schema.Column{CourseItemsColumns[2]},

				RefColumns: []*schema.Column{SubjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "course_items_subject_types_course_items",
				Columns: []*schema.Column{CourseItemsColumns[3]},

				RefColumns: []*schema.Column{SubjectTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SubjectsColumns holds the columns for the "subjects" table.
	SubjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "subject_name", Type: field.TypeString, Unique: true},
		{Name: "owner_id", Type: field.TypeInt, Nullable: true},
	}
	// SubjectsTable holds the schema information for the "subjects" table.
	SubjectsTable = &schema.Table{
		Name:       "subjects",
		Columns:    SubjectsColumns,
		PrimaryKey: []*schema.Column{SubjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "subjects_teachers_subjects",
				Columns: []*schema.Column{SubjectsColumns[2]},

				RefColumns: []*schema.Column{TeachersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SubjectTypesColumns holds the columns for the "subject_types" table.
	SubjectTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type_name", Type: field.TypeString, Unique: true},
	}
	// SubjectTypesTable holds the schema information for the "subject_types" table.
	SubjectTypesTable = &schema.Table{
		Name:        "subject_types",
		Columns:     SubjectTypesColumns,
		PrimaryKey:  []*schema.Column{SubjectTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// TeachersColumns holds the columns for the "teachers" table.
	TeachersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "teacher_email", Type: field.TypeString, Unique: true},
		{Name: "teacher_name", Type: field.TypeString},
	}
	// TeachersTable holds the schema information for the "teachers" table.
	TeachersTable = &schema.Table{
		Name:        "teachers",
		Columns:     TeachersColumns,
		PrimaryKey:  []*schema.Column{TeachersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CoursesTable,
		CourseItemsTable,
		SubjectsTable,
		SubjectTypesTable,
		TeachersTable,
	}
)

func init() {
	CoursesTable.ForeignKeys[0].RefTable = TeachersTable
	CourseItemsTable.ForeignKeys[0].RefTable = CoursesTable
	CourseItemsTable.ForeignKeys[1].RefTable = SubjectsTable
	CourseItemsTable.ForeignKeys[2].RefTable = SubjectTypesTable
	SubjectsTable.ForeignKeys[0].RefTable = TeachersTable
}
